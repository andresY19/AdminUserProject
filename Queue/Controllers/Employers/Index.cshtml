@model IEnumerable<Queue.Models.Employer>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row justify-content-center">
    <div class="col-lg-12">
        <div class="card">
            <div class="box-header with-border">
                <h4 class="box-title">Werkgevers</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-10">
                    </div>
                    <div class="col-xl-2">
                        <a href="@Url.Action("Create", "Employers")" class="btn btn-info  float-right">
                            <i class="fa fa-plus"></i> Nieuwe werkgever
                        </a>
                    </div>
                </div>
                @Html.EJS().QueryBuilder("querybuilder").Width("100%").Columns(col =>
   {
       col.Field("EmployeeID").Label("Employee ID").Type("number").Add();
       col.Field("FirstName").Label("First Name").Type("string").Add();
       col.Field("TitleOfCourtesy").Label("Title Of Courtesy").Type("boolean").Values(new List<string> { "Mr.", "Mrs." }).Add();
       col.Field("Title").Label("Title").Type("string").Add();
       col.Field("HireDate").Label("Hire Date").Type("date").Format("dd/MM/yyyy").Add();
       col.Field("Country").Label("Country").Type("string").Add();
       col.Field("City").Label("City").Type("string").Add();
   }).DataSource(Model).Render()
                <div class="table-responsive">
                    <table id="myTable" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Type werkgever</th>
                                <th>Bussines Type</th>
                                <th>Soort bedrijf</th>
                                <th>Handelsnaam</th>
                                <th>Bewerk</th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.BussinesType.type)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.EmployerType.type)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.registrationname)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.tradename)
                                    </td>
                                    <td>
                                        <a class="btn btn-outline-secondary" href="@Url.Action("Edit", "Employers", new { id = item.idemployeer })"><i class="fa fa-edit"></i></a>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script src="https://cdn.datatables.net/buttons/1.2.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.2.2/js/buttons.flash.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js"></script>
    <script src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/pdfmake.min.js"></script>
    <script src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.2.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.2.2/js/buttons.print.min.js"></script>


    <script>
        $('#myTable').DataTable();
    </script>
}

