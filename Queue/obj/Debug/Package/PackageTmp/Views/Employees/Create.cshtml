@model Queue.Models.Employee

@{
    Layout = "~/Views/Shared/_LayoutElement.cshtml";
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/assets/vendor_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.10/jquery.mask.js"></script>
@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.age)
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12 col-12">
            <div class="box">
                <div class="box-header with-border">
                    <h4 class="box-title">Maak een nieuwe medewerker aan</h4>
                </div>

                <div class="box-body">
                    @*@if (User.IsInRole("Admin"))
                    {
                        <div class="form-group">
                            <div class="row">
                                <div class="col-6">
                                    <label class="control-label">Werkgever</label>
                                    <div class="input-group">
                                        @Html.DropDownList("idemployeer", null, htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    }*@
                    <div class="form-group">
                        <div class="row">
                            <div class="col-6">
                                @Html.LabelFor(model => model.employeetype, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.employeetype, "", new { @class = "text-danger" })
                                <div class="input-group">
                                    <select id="employeetype" name="employeetype" class="form-control select2" style="width: 100%;">
                                        <option value="werknemer">werknemer</option>
                                        <option value="bestuurder">bestuurder</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-6">
                                @Html.LabelFor(model => model.egov, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    @Html.EditorFor(model => model.egov, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.egov, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <div class="col-6">
                                @Html.LabelFor(model => model.identitynumber, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.identitynumber, "", new { @class = "text-danger" })
                                @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                                <div class="input-group">
                                    @Html.EditorFor(model => model.identitynumber, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="col-6">
                                @Html.LabelFor(model => model.GACcode, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    @Html.EditorFor(model => model.GACcode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.GACcode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="row">
                            <div class="col-6">
                                @Html.LabelFor(model => model.firstname, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
                                <div class="input-group">
                                    @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="col-6">
                                @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                                <div class="input-group">
                                    @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="row">
                            <div class="col-6">
                                @Html.LabelFor(model => model.sex, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <select id="sex" name="sex" class="form-control select2" style="width: 100%;">
                                        <option value="mens">mens</option>
                                        <option value="vrouw">vrouw</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-6">
                                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <div class="col-6">
                                @Html.LabelFor(model => model.addressnro, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    @Html.EditorFor(model => model.addressnro, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.addressnro, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-6">
                                @Html.LabelFor(model => model.aditionaladdress, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    @Html.EditorFor(model => model.aditionaladdress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.aditionaladdress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <div class="col-6">
                                @Html.LabelFor(model => model.statusperson, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <select id="statusperson" name="statusperson" class="form-control select2" style="width: 100%;">
                                        <option value="actief">actief</option>
                                        <option value="overleden">overleden</option>
                                        <option value="emigreren">emigreren</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-6">
                                @Html.LabelFor(model => model.datestatus, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.datestatus, "", new { @class = "text-danger" })
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.EditorFor(model => model.datestatus, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="row">
                            <div class="col-6">
                                @Html.LabelFor(model => model.nacionality, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    @Html.DropDownList("nacionality", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.nacionality, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-6">
                                @Html.LabelFor(model => model.birthcountry, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    @Html.DropDownList("birthcountry", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.birthcountry, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>


                    <div class="form-group">
                        <div class="row">
                            <div class="col-6">
                                @Html.LabelFor(model => model.maritalstatus, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <select id="maritalstatus" name="maritalstatus" onclick="calcrestperiod()" class="form-control select2" style="width: 100%;">
                                        <option value="werknemer">werknemer</option>
                                        <option value="getrouwd">getrouwd</option>
                                        <option value="gescheiden">gescheiden</option>
                                        <option value="weduwnaar">weduwnaar</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-6">
                                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-at"></i>
                                    </div>
                                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", type = "email" } })
                                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="row">
                            <div class="col-4">
                                @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-phone"></i>
                                    </div>
                                    @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-4">
                                @Html.LabelFor(model => model.mobile, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-phone"></i>
                                    </div>
                                    @Html.EditorFor(model => model.mobile, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-4">
                                @Html.LabelFor(model => model.fax, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-phone"></i>
                                    </div>
                                    @Html.EditorFor(model => model.fax, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.fax, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-actions">
                        <div class="d-flex flex-row-reverse">
                            <div class="p-2">
                                <button id="add_dictionary" name="add_dictionary" type="submit" value="Create" class="btn btn-info waves-effect waves-light btn-block">
                                    Add
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


}

<script>
    $(function () {
        //$("#identitynumber").inputmask("9999999999", { regex: "([12]\d{3}(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])\d{2})" });
        $('#datestatus').val("");
        $('#datestatus').datepicker({
            autoclose: true,
            format: 'dd/mm/yyyy'
        });

        $("#identitynumber")
            .focusout(function () {

                var id = $("#identitynumber").val().replace("_", "").replace("_", "").replace("_", "").replace("_", "").replace("_", "").replace("_", "").replace("_", "").replace("_", "").replace("_", "").replace("_", "");


                var age = Getage(id.slice(0, 8));
                $("#age").val(age);

            });


        function Getage(date) {

            var dob = parsedate(date);
            var today = new Date();
            var age = Math.floor((today - dob) / (365.25 * 24 * 60 * 60 * 1000));
            return age;
        }

        function parsedate(str) {
            if (!/^(\d){8}$/.test(str)) return "invalid date";
            var y = str.substr(0, 4),
                m = str.substr(4, 2),
                d = str.substr(6, 2);
            return new Date(y, m - 1, d);
        }

    });

</script>